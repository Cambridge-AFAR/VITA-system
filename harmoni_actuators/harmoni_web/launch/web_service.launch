<!-- This is an example launch file for how a ROS application could use a node -->
<launch>
    <arg name="web_directory_path" value="$(find harmoni_web)/web"/>
	<arg name="face_directory_path" value="$(find harmoni_web)/web_face"/>
    <arg name="port_face" default="8081"/>
	<arg name="port_web" default="8082"/>
	<arg name="use_web" default="true"/>
	<arg name="use_face" default="true"/>
	<arg name="test" default="false"/>
	<arg name="test_input" default="{'component_id':'test_container', 'set_content': ''}"/>
	<arg name="test_id" default="default"/>
	<group if="$(arg use_web)">
		<rosparam file="$(find harmoni_web)/config/configuration.yaml"/>
		<param name="test_web" value="$(arg test)"/>
		<param name="test_input_web" value="$(arg test_input)"/>
		<param name="test_id_web" value="$(arg test_id)"/>
		<param name="name_web" value="web"/>
		<node pkg="harmoni_web" type="http_server_runner.py" name="web_http_server_$(arg test_id)" output="screen" args="$(arg web_directory_path) $(arg port_web)" />
		<node pkg="harmoni_web" type="web_service.py" name="harmoni_web_$(arg test_id)" output="screen"/>
		<include ns="bridge_web" file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" /> 
		<!--	<arg name="port" value="9000"/>
		</include>
			<include  file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
			<arg name="port" value="9000"/>
		</include/>-->
  	</group>
  	<group if="$(arg use_face)">
			<rosparam file="$(find harmoni_web)/config/configuration.yaml"/>
			<param name="test_face" value="$(arg test)"/>
			<param name="test_input_face" value="$(arg test_input)"/>
			<param name="test_id_face" value="$(arg test_id)"/>
			<param name="name_face" value="web"/>
			<node pkg="harmoni_web" type="http_server_runner.py" name="face_http_server_$(arg test_id)" output="screen" args="$(arg face_directory_path) $(arg port_face)" />
			<node pkg="harmoni_web" type="face_service.py" name="harmoni_face_$(arg test_id)" output="screen"/>
  	</group>
</launch>

